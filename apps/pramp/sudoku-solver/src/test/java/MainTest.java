import org.junit.Test;

import static org.junit.Assert.*;

/**
 * Test that the findArrayQuadruplet() method passes the given test cases.
 *
 * @author Paul Michael Reilly
 */
public class MainTest {

    @Test public void testMain() {
        new Main();
    }

    @Test public void test1() {
        runTest(1, new char[][]{
                {'.','.','.','7','.','.','3','.','1'},
                {'3','.','.','9','.','.','.','.','.'},
                {'.','4','.','3','1','.','2','.','.'},
                {'.','6','.','4','.','.','5','.','.'},
                {'.','.','.','.','.','.','.','.','.'},
                {'.','.','1','.','.','8','.','4','.'},
                {'.','.','6','.','2','1','.','5','.'},
                {'.','.','.','.','.','9','.','.','8'},
                {'8','.','5','.','.','4','.','.','.'}
            }, true);
    }

    @Test public void test2() {
        runTest(2, new char[][]{
                {'.','8','9','.','4','.','6','.','5'},
                {'.','7','.','.','.','8','.','4','1'},
                {'5','6','.','9','.','.','.','.','8'},{'.','.','.','7','.','5','.','9','.'},
                {'.','9','.','4','.','1','.','5','.'},
                {'.','3','.','9','.','6','.','1','.'},
                {'8','.','.','.','.','.','.','.','7'},
                {'.','2','.','8','.','.','.','6','.'},
                {'.','.','6','.','7','.','.','8','.'}
            }, false);
    }

    @Test public void test3() {
        runTest(3, new char[][]{
                {'.','2','3','4','5','6','7','8','9'},
                {'1','.','.','.','.','.','.','.','.'},
                {'.','.','.','.','.','.','.','.','.'},
                {'.','.','.','.','.','.','.','.','.'},
                {'.','.','.','.','.','.','.','.','.'},
                {'.','.','.','.','.','.','.','.','.'},
                {'.','.','.','.','.','.','.','.','.'},
                {'.','.','.','.','.','.','.','.','.'},
                {'.','.','.','.','.','.','.','.','.'}
            }, false);
    }

    @Test public void test4() {
        runTest(4, new char[][]{
                {'.','.','5','.','.','2','.','.','.'},
                {'.','.','9','.','4','7','.','2','.'},
                {'.','.','8','.','5','6','.','.','1'},
                {'.','.','.','.','.','8','3','4','.'},
                {'.','.','.','.','.','.','.','.','6'},
                {'.','.','.','.','3','.','1','8','.'},
                {'.','2','.','.','.','.','.','.','.'},
                {'.','9','.','.','8','.','6','7','.'},
                {'3','.','6','5','7','.','.','.','.'}
            }, false);
}

@Test public void test5() {
    runTest(5, new char[][]{
            {'.','.','3','8','.','.','4','.','.'},
            {'.','.','.','.','1','.','.','7','.'},
            {'.','6','.','.','.','5','.','.','9'},
            {'.','.','.','9','.','.','6','.','.'},
            {'.','2','.','.','.','.','.','1','.'},
            {'.','.','4','.','.','3','.','.','2'},
            {'.','.','2','.','.','.','8','.','.'},
            {'.','1','.','.','.','.','.','5','.'},
            {'9','.','.','.','.','7','.','.','3'}
        }, false);
}

@Test public void test6() {
    runTest(6, new char[][]{
            {'.','.','.','.','.','.','.','.','.'},
            {'.','.','.','.','.','.','.','.','.'},
            {'.','.','.','.','.','.','.','.','.'},
            {'.','.','.','.','.','.','.','.','.'},
            {'.','.','.','.','.','.','.','.','.'},
            {'.','.','.','.','.','.','.','.','.'},
            {'.','.','.','.','.','.','.','.','.'},
            {'.','.','.','.','.','.','.','.','.'},
            {'.','.','.','.','.','.','.','.','.'}
        }, true);
}

@Test public void test7() {
    runTest(7, null, false);
}

@Test public void test8() {
    runTest(8, new char[][]{}, false);
}

@Test public void test9() {
    runTest(9, new char[][]{{0, 3}}, false);
}
// Private instance methods.

private void runTest(final int testNum, final char[][] data, final boolean expected) {
    System.out.println("Test" + testNum);
    boolean actual = Main.sudokuSolve(data);
    assertEquals("The result is wrong!", expected, actual);
}
}
